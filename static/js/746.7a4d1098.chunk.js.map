{"version":3,"file":"static/js/746.7a4d1098.chunk.js","mappings":"8NA2BA,EAvBkB,SAAC,GAA+B,IAA7BA,EAA4B,EAA5BA,eAAgBC,EAAY,EAAZA,MAEjC,OACI,SAAC,IAAD,CAAKC,EAAE,IAAIC,SAAS,IAApB,UACI,SAAC,KAAD,CACIC,cAAe,CAAEC,OAAQJ,GACzBK,SAAU,SAACC,EAAD,GAA2B,EAAhBC,UACjBR,EAAeO,EAAOF,OACzB,EAJL,UAKI,UAAC,KAAD,YACI,SAAC,KAAD,CAAOI,MAAO,CAAEN,SAAU,QAAUO,KAAK,SAASC,KAAK,OAAOC,UAAQ,EAACC,aAAa,SACpF,SAAC,KAAD,CAAcH,KAAK,eACnB,SAAC,EAAAI,EAAD,CAAGX,SAAS,IAAID,EAAE,IAAIa,GAAG,SAASJ,KAAK,SAAvC,0BAKnB,E,iDCkBD,EAhCe,WAAO,IAAD,EACXK,GAAWC,EAAAA,EAAAA,MACjB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAW,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,IAEjDC,EAAAA,EAAAA,YAAU,WACc,KAAhBF,IAAoBG,EAAAA,EAAAA,IAAgB,EAAGH,GAAaI,KAAKR,EAChE,GAAE,CAACI,IAMJ,OACI,6BACI,SAAC,EAAD,CAAWxB,eANE,SAAA6B,GACjBN,EAA0B,KAAVM,EAAe,CAAE5B,MAAO4B,GAAU,CAAC,EACtD,EAIgD5B,MAAOuB,IAC/CL,EAAOW,OAAS,IACb,wBACKX,EAAOY,KAAI,SAAAC,GAAK,OACb,SAAC,IAAD,CAAKjB,GAAG,KAAKkB,EAAE,IAAf,UACI,SAAC,KAAD,CAAYC,GAAE,UAAKF,EAAMG,IAAMC,MAAO,CAAEC,KAAMrB,GAA9C,SACKgB,EAAMM,SAFSN,EAAMG,GADjB,QAWpC,C","sources":["components/SearchBar/SearchBar.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import { Div, P } from 'components/Wrappers/Wrappers'\nimport { Formik, Field, Form, ErrorMessage } from 'formik'; \nimport PropTypes from 'prop-types';\n\nconst SearchBar = ({ onSubmitFilter, query }) => {\n    \n    return (\n        <Div m=\"4\" fontSize='m'>\n            <Formik\n                initialValues={{ search: query }}\n                onSubmit={(values, { resetForm }) => {\n                    onSubmitFilter(values.search);\n                }}>\n                <Form>\n                    <Field style={{ fontSize: \"2rem\" }} name=\"search\" type=\"text\" required autoComplete='off' />\n                    <ErrorMessage name=\"firstName\" />\n                    <P fontSize='l' m='1' as='button' type=\"submit\">Search</P>\n                </Form>\n            </Formik>\n        </Div>\n    );\n};\n\nSearchBar.propTypes = {\n    onSubmitFilter: PropTypes.func.isRequired,\n}\n\nexport default SearchBar;","import SearchBar from '../../components/SearchBar/SearchBar';\nimport { fetchSearchData } from '../../services/api';\nimport { Div } from 'components/Wrappers/Wrappers';\nimport { StyledLink } from '../../components/commonStyled';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n\nconst Movies = () => {\n    const location = useLocation();\n    const [movies, setMovies] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const queryParams = searchParams.get('query') ?? '';\n\n    useEffect(() => {\n        if (queryParams !== '') fetchSearchData(1, queryParams).then(setMovies);\n    }, [queryParams]);\n\n    const submitFilter = value => {\n        setSearchParams(value !== '' ? { query: value } : {});\n    };\n\n    return (\n        <main>\n            <SearchBar onSubmitFilter={submitFilter} query={queryParams} />\n            {movies.length > 0 && (\n                <ul>\n                    {movies.map(movie => (\n                        <Div as=\"li\" p=\"2\" key={movie.id}>\n                            <StyledLink to={`${movie.id}`} state={{ from: location }}>\n                                {movie.title}\n                            </StyledLink>\n                        </Div>\n                    ))}\n                </ul>\n            )}\n        </main>\n    );\n};\n\nexport default Movies;"],"names":["onSubmitFilter","query","m","fontSize","initialValues","search","onSubmit","values","resetForm","style","name","type","required","autoComplete","P","as","location","useLocation","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","queryParams","get","useEffect","fetchSearchData","then","value","length","map","movie","p","to","id","state","from","title"],"sourceRoot":""}